{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fancy\\\\main-macronewt\\\\macronewts\\\\frontend\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    const loginData = {\n      email,\n      password\n    };\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(loginData)\n      });\n      if (response.ok) {\n        const responseData = await response.json(); // Parse response data\n\n        // Check for successful login based on backend response (replace with your logic)\n        if (responseData.success) {\n          setIsLoggedIn(true);\n          navigate('/home'); // Redirect to home page\n        } else {\n          // Handle login failure (e.g., display error message)\n          console.error('Login failed:', responseData.message);\n        }\n      } else {\n        console.error('Login request failed:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"login-text\",\n        children: \"LOG IN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"userInput\",\n        name: \"useremail\",\n        type: \"text\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"userInput\",\n        name: \"userpassword\",\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"line-division\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"or-part\",\n        children: \"Or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"line-division\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sign-up-text\",\n      children: [\"Haven\\u2019t got an account yet?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        className: \"signup-text-link\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginForm, \"KN3Kzl+xbVDEK6g7j5ANJnQKP3k=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["Link","useState","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","isLoggedIn","setIsLoggedIn","navigate","handleLogin","e","preventDefault","loginData","email","password","response","fetch","method","headers","body","JSON","stringify","ok","responseData","json","success","console","error","message","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","placeholder","to","_c","$RefreshReg$"],"sources":["C:/Users/fancy/main-macronewt/macronewts/frontend/src/components/LoginForm.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction LoginForm() {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        const loginData = {\r\n            email,\r\n            password,\r\n        };\r\n\r\n        try {\r\n            const response = await fetch('/api/login', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(loginData),\r\n            });\r\n      \r\n            if (response.ok) {\r\n              const responseData = await response.json(); // Parse response data\r\n      \r\n              // Check for successful login based on backend response (replace with your logic)\r\n              if (responseData.success) {\r\n                setIsLoggedIn(true);\r\n                navigate('/home'); // Redirect to home page\r\n              } else {\r\n                // Handle login failure (e.g., display error message)\r\n                console.error('Login failed:', responseData.message);\r\n              }\r\n            } else {\r\n              console.error('Login request failed:', response.statusText);\r\n            }\r\n          } catch (error) {\r\n            console.error('Error during login:', error);\r\n          }\r\n    }    \r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form>\r\n                <span className=\"login-text\">LOG IN</span>\r\n                <input \r\n                    className=\"userInput\"\r\n                    name=\"useremail\" \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                />\r\n                <input \r\n                    className=\"userInput\"\r\n                    name=\"userpassword\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n                <button className='submit-button' type='submit'>Login</button>\r\n            </form>\r\n            <div className=\"divider-container\">\r\n                <hr className=\"line-division\"></hr> \r\n                <p className=\"or-part\">Or</p>\r\n                <hr className=\"line-division\"></hr>\r\n            </div>\r\n\r\n            <p className=\"sign-up-text\">\r\n                Havenâ€™t got an account yet?   \r\n                <Link to='/signup' className=\"signup-text-link\">Sign up</Link>\r\n            </p>\r\n        </div>     \r\n    )\r\n}\r\n\r\nexport default LoginForm;"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,SAAS,GAAG;MACdC,KAAK;MACLC;IACJ,CAAC;IAED,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACvCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,SAAS;MAClC,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;;QAE5C;QACA,IAAID,YAAY,CAACE,OAAO,EAAE;UACxBlB,aAAa,CAAC,IAAI,CAAC;UACnBC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;QACrB,CAAC,MAAM;UACL;UACAkB,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEJ,YAAY,CAACK,OAAO,CAAC;QACtD;MACF,CAAC,MAAM;QACLF,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEZ,QAAQ,CAACc,UAAU,CAAC;MAC7D;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACN,CAAC;EAED,oBACIxB,OAAA;IAAK2B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B5B,OAAA;MAAA4B,QAAA,gBACI5B,OAAA;QAAM2B,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC1ChC,OAAA;QACI2B,SAAS,EAAC,WAAW;QACrBM,IAAI,EAAC,WAAW;QAChBC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFhC,OAAA;QACI2B,SAAS,EAAC,WAAW;QACrBM,IAAI,EAAC,cAAc;QACnBC,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC;MAAU;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFhC,OAAA;QAAQ2B,SAAS,EAAC,eAAe;QAACO,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACPhC,OAAA;MAAK2B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9B5B,OAAA;QAAI2B,SAAS,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnChC,OAAA;QAAG2B,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7BhC,OAAA;QAAI2B,SAAS,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAENhC,OAAA;MAAG2B,SAAS,EAAC,cAAc;MAAAC,QAAA,GAAC,kCAExB,eAAA5B,OAAA,CAACJ,IAAI;QAACwC,EAAE,EAAC,SAAS;QAACT,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd;AAAC9B,EAAA,CApEQD,SAAS;EAAA,QAEGH,WAAW;AAAA;AAAAuC,EAAA,GAFvBpC,SAAS;AAsElB,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}