{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext, useContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('http://localhost:4000/api/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      // save user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n\n      // Update auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n      this.props.history.push('/#');\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"XLolJbgaWhcWCQyQceNUQz8r1xc=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useContext","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload","props","history","push"],"sources":["C:/Users/fancy/main-macronewt/macronewts/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext, useContext } from './useAuthContext';\r\n\r\nexport const useLogin = () =>{\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(null)\r\n    const {dispatch} = useAuthContext()\r\n\r\n    const login = async (email, password) => {\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response = await fetch('http://localhost:4000/api/user/login', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({email, password})\r\n        })\r\n        const json = await response.json()\r\n\r\n        if(!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n        if(response.ok){\r\n            // save user to local storage\r\n            localStorage.setItem('user', JSON.stringify(json))\r\n\r\n            // Update auth context\r\n            dispatch({type: 'LOGIN', payload: json})\r\n\r\n            setIsLoading(false)\r\n            this.props.history.push('/#')\r\n        }\r\n    }\r\n\r\n    return{login, isLoading, error}\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,EAAEC,UAAU,QAAQ,kBAAkB;AAE7D,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAACS;EAAQ,CAAC,GAAGR,cAAc,CAAC,CAAC;EAEnC,MAAMS,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACrCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAG,CAACP,QAAQ,CAACQ,EAAE,EAAC;MACZb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB;IACA,IAAGQ,QAAQ,CAACQ,EAAE,EAAC;MACX;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAElD;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;MAExCZ,YAAY,CAAC,KAAK,CAAC;MACnB,IAAI,CAACkB,KAAK,CAACC,OAAO,CAACC,IAAI,CAAC,IAAI,CAAC;IACjC;EACJ,CAAC;EAED,OAAM;IAAClB,KAAK;IAAEH,SAAS;IAAEF;EAAK,CAAC;AACnC,CAAC;AAAAD,EAAA,CAjCYD,QAAQ;EAAA,QAGEF,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}